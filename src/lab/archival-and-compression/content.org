#+TITLE: Experiment 5 - Archival and Compression Commands

* Introduction

File Compression and Archiving are two different functions.  Archiving
is useful when a number of files need to be combined into a single file.
This is useful when the files need to be transferred or sent across
e-mails.  Compressions involves reducing the file size so as to save the
disk space or to create backups of the data. 

In this experiment, few archival and compressions commands would be
introduced and explained.  It is suggestible to try out the commands in
the theory section on your own machines before going to the /Tasks/
Section.  


* Objective

The objective of this experiment is to familiarize the users with some
of the widely used commands for archiving the files and folders on Linux
system.


* Theory
 
There are many commands available in Linux which help with archiving or
compressing the files and folders.  Zip and Tar are the most widely
used, in general.  But, in this section, a few more commands would be
explained. 

** Zip and Unzip

Zip and Unzip are the most widely used archiving commands. They work on
across all operating systems, hence, making them the most obvious
choices.

*Zip*

Zip does both archiving and compression functions on the files. To
archive using zip command:

#+BEGIN_EXAMPLE
$ ls
abc.org image1.jpg image2.jpg 

$ zip abc abc.org
  adding: abc.org (deflated 39%)

$ ls -l
total 268
-rw-rw-r-- 1 admin admin    451 2012-12-20 17:02 abc.org
-rw-rw-r-- 1 admin admin    437 2012-12-27 15:41 abc.zip
-rw-rw-r-- 1 admin admin 134964 2012-12-19 20:56 image1.jpg
-rw-rw-r-- 1 admin admin 124945 2012-12-16 12:34 image2.jpg
#+END_EXAMPLE

The syntax of the command is:

=zip [options] [archive name] [file name/path name]=

where archive is the name of a new or existing archive and file name or
path name is name of the file or directory to be archived or its path.

In the example above, the fifth column shows the file size of the files.
=abc.org= is 451 bytes and the compressed file =abc.zip= is 437 bytes.
The amount of compression of a file depends on the contents of the file
and file size.  The compression amount can range anywhere between
1%-100% of the original file size.  

To archive more than one file in the same zipped file:

#+BEGIN_EXAMPLE
$ ls
abc.org abc.zip image1.jpg image2.jpg

$ zip abc image1.jpg image2.jpg
  adding: image1.jpg (deflated 2%)
  adding: image2.jpg (deflated 6%)

$ ls -l
total 508
-rw-rw-r-- 1 admin admin    451 2012-12-20 17:02 abc.org
-rw-rw-r-- 1 admin admin 250422 2012-12-27 16:30 abc.zip
-rw-rw-r-- 1 admin admin 134964 2012-12-19 20:56 image1.jpg
-rw-rw-r-- 1 admin admin 124945 2012-12-16 12:34 image2.jpg
#+END_EXAMPLE

Observe the total directory size in Example 1 and Example 2.  The
directory size is 268K in Example 1 where as the size of the archived
file =abc.zip= in Example 2 is 250K.  There is a 18K of compression.
Since, zipping all the files separately is not a convenient solution,
there exists a way to zip the entire directory at one go.

#+BEGIN_EXAMPLE
$ ls
abc.org image1.jpg image2.jpg

$ zip -r abc * 
  adding: abc.org (deflated 39%)
  adding: image1.jpg (deflated 2%)
  adding: image2.jpg (deflated 6%)

$ ls -l
total 508
-rw-rw-r-- 1 admin admin    451 2012-12-20 17:02 abc.org
-rw-rw-r-- 1 admin admin 250422 2012-12-27 16:30 abc.zip
-rw-rw-r-- 1 admin admin 134964 2012-12-19 20:56 image1.jpg
-rw-rw-r-- 1 admin admin 124945 2012-12-16 12:34 image2.jpg
#+END_EXAMPLE

To archive an entire directory, =-r= attribute is used with the command
=zip=. 

#+BEGIN_EXAMPLE
$ zip -r test.zip test/ 
  adding: test/ (stored 0%)
  adding: test/dir/ (stored 0%)
  adding: test/dir/abc.org (deflated 39%)
  adding: test/image2.jpg (deflated 6%)
  adding: test/image1.jpg (deflated 2%)
  adding: test/abc.zip (stored 0%)
  adding: test/abd (deflated 39%)
  adding: test/abc.org (deflated 39%)
#+END_EXAMPLE

*UnZip*

Unzip is used to extract the files from the archive.  The syntax =unzip
[archive name]= is the regular syntax to unzip the files in the current
directory.  If you would like to extract the files at a specified file
location =-d= option should be used followed by the directory path. 

#+BEGIN_EXAMPLE
$ ls
test.zip  

$ unzip test.zip
Archive:  test.zip
   creating: test/
   creating: test/dir/
  inflating: test/dir/abc.org        
  inflating: test/image2.jpg         
  inflating: test/image1.jpg         
 extracting: test/abc.zip            
  inflating: test/abd                
  inflating: test/abc.org      

$ unzip test.zip -d dir/
Archive:  test.zip
   creating: dir/test/
   creating: dir/test/dir/
  inflating: dir/test/dir/abc.org    
  inflating: dir/test/image2.jpg     
  inflating: dir/test/image1.jpg     
 extracting: dir/test/abc.zip        
  inflating: dir/test/abd            
  inflating: dir/test/abc.org        

$ cd dir/
$ ls -l
total 8
-rw-rw-r-- 1 swathy swathy  451 2012-12-28 10:30 abc.org
drwxrwxr-x 3 swathy swathy 4096 2012-12-28 11:31 test
#+END_EXAMPLE

The archived files have been extracted in the specified directory.


** Tar 
 
Tar is used to convert the files into an archive.  The syntax is: 

=tar [options] [archive name] [file name]=

Tar provides a lot of options. Some of the most common used ones are:
c - used when creating the tar files
v - verbose mode which shows the list of files being archived on the command line
f - indicates that next argument will be the name of new/existing archive file
x - extracts the files from the archive

#+BEGIN_EXAMPLE
$ ls
test

$ tar -cvf test.tar test/
test/
test/dir/
test/dir/abc.org
test/image2.jpg
test/image1.jpg
test/abc.tar
test/abc.zip
test/abd
test/abc.org

test test.tar

$ rm -rf test
$ tar -xvf test.tar
$ ls
test/
test/dir/
test/dir/abc.org
test/image2.jpg
test/image1.jpg
test/abc.tar
test/abc.zip
test/abd
test/abc.org

$ ls
test  test.tar
#+END_EXAMPLE

By default, tar doesn't provide any compression and decompression
capabilities.  But, it can use external compression utilities like bzip2
and gzip.  The options for these utilities are:
j - for compressing and decompressing using bzip2
z - for compressing and decompressing using gzip

#+BEGIN_EXAMPLE
$ ls
test

$ tar -cjvf test.tar.bz2 *
test/
test/dir/
test/dir/abc.org
test/image2.jpg
test/image1.jpg
test/abc.tar
test/abc.zip
test/abd
test/abc.org

$ ls -l
total 728
drwxrwxr-x 3 swathy swathy   4096 2012-12-28 14:56 test
-rw-rw-r-- 1 swathy swathy 737525 2012-12-28 15:18 test.tar.bz2

$ tar -czvf test.tar.gz *
test/
test/dir/
test/dir/abc.org
test/image2.jpg
test/image1.jpg
test/abc.tar
test/abc.zip
test/abd
test/abc.org

$ ls -l
total 984
drwxrwxr-x 3 swathy swathy    4096 2012-12-28 14:56 test
-rw-rw-r-- 1 swathy swathy 737525 2012-12-28 15:18 test.tar.bz2
-rw-rw-r-- 1 swathy swathy 1003263 2012-12-28 15:26 test.tar.gz

$ cd test/
$ ls -l
total 1028
-rw-rw-r-- 1 swathy swathy    451 2012-12-20 17:02 abc.org
-rw-rw-r-- 1 swathy swathy 522240 2012-12-28 14:46 abc.tar
-rw-rw-r-- 1 swathy swathy 250981 2012-12-28 10:31 abc.zip
-rw-rw-r-- 1 swathy swathy    451 2012-12-28 10:30 abd
drwxrwxr-x 2 swathy swathy   4096 2012-12-28 10:30 dir
-rw-rw-r-- 1 swathy swathy 134964 2012-12-19 20:56 image1.jpg
-rw-rw-r-- 1 swathy swathy 124945 2012-12-16 12:34 image2.jpg
#+END_EXAMPLE

*Note: .tgz is same as .tar.gz*

Files can be added to the existing tar archive by using the =-r= option.
But, this option is not available for the compressed archives. 

#+BEGIN_EXAMPLE
$ ls
test test.tar

$ touch abcd.txt
$ tar -rvf test.tar abcd.txt
abcd.txt
#+END_EXAMPLE

Similarly, certain files can be deleted from the archives using
=--delete= option.

#+BEGIN_EXAMPLE
$ tar -vf test.tar --delete abcd.org
#+END_EXAMPLE


** Gzip 

Gzip is a compression utility which compresses only the files.  To
decompress using gzip, =-d= option is used.  It replaces the original
file, compresses it and appends the file name with the extension .gz.
Gzip utility can also be reiterated over a directory using =-r= option.
It compresses all the files inside the directory. 

#+BEGIN_EXAMPLE
$ ls
abcd.org test/

$ gzip abcd.org
$ ls
abcd.org.gz test/

$ gzip -d abcd.org.gz
$ls
abcd.org test/

$ gzip -r test/
$ cd test
$ ls
abc.org.gz  abc.tar.gz  abc.zip.gz  abd.gz  dir/  image1.jpg.gz  image2.jpg.gz
#+END_EXAMPLE

*This compression can be used along with tar command using the option z.*


** Gunzip

Gunzip is a decompression utility which can decompress files created by
gzip, zip and compress.  The =-r= option is used to decompress all the
files in a directory.  

#+BEGIN_EXAMPLE
$ ls
abcd.org.gz  test/

$ gunzip abcd.org.gz
$ ls
abcd.org  test/

$ gunzip -r test/
$ cd test
$ ls
abc.org  abc.tar  abc.zip  abd  dir/  image1.jpg  image2.jpg
#+END_EXAMPLE


** Bzip2 

Bzip2 provides a high rate of lossless compression when compared to Gzip
and Zip.  But, it is slower than either.  It replaces the original file
with the compressed file by appending the file name with .bz2 file
extension.  The original files can be retained using =-k= option.  The
file can be decompressed using the =-d= option.  Since bzip2 doesn't
archive the files, the command does not work on the directories.

#+BEGIN_EXAMPLE
$ ls
abcd.org test/

$ bzip2 -v abcd.org
  abcd.org:  no data compressed.

$ ls 
abcd.org.bz2 test/

$ bzip2 -d abcd.org.bz2
$ ls
abcd.org test/

$ bzip2 -k abcd.org
abcd.org abcd.org.bz2 test/
#+END_EXAMPLE

*This compression can be used along with tar command using the option j.*


** Bunzip2

Bunzip2 is a decompression utility which decompresses only the files
with extensions .bz2, .bz, .tbz2, .tbz.  In case of any other file name,
it throws an error. 

#+BEGIN_EXAMPLE
$ ls
abcd.org.bz2  test/

$ bunzip2 abcd.org.bz2
abcd.org  test/
#+END_EXAMPLE


* Experiment

** Tasks to be Done:

   - Create a test folder with the name archive-compression. 
   - Create a few text files. 
   -   


* Quiz

1. How to run Bunzip on directories to decompress them?
2. What is the option used to run any of the archival or compression
   commands, if allowed, on the directories?
3. What is the compression percentage of a tar file?
4. Which compression utility has better performance - Bzip2 or Gzip?
   And, which has a better rate of compression?
5. Which of the commands discussed in the Experiment come by default
   with the Linux system. 


* Further Readings


* Feedback

Please send your feedback on the lab using this feedback form. 
